/**
 * This header is generated by class-dump-z 0.2-0.
 * class-dump-z is Copyright (C) 2009 by KennyTM~, licensed under GPLv3.
 *
 * Source: (null)
 */

#import "ModernCombat5-Structs.h"
#import "MFMailComposeViewControllerDelegate.h"
#import "UINavigationControllerDelegate.h"
#import <UIKit/UIViewController.h>

@class MFMailComposeViewController, UIWindow;

@interface EmailPhonebookiOSGLSocialLib : UIViewController <MFMailComposeViewControllerDelegate, UINavigationControllerDelegate> {
	void *addressbook;	// 160 = 0xa0
	set<std::__1::basic_string<char>, std::__1::less<std::__1::basic_string<char> >, std::__1::allocator<std::__1::basic_string<char> > > m_nameCheckSet;	// 164 = 0xa4
	map<std::__1::basic_string<char>, std::__1::basic_string<char>, std::__1::less<std::__1::basic_string<char> >, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, std::__1::basic_string<char> > > > m_emailToNameMap;	// 176 = 0xb0
	basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > m_message;	// 188 = 0xbc
	basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > m_subject;	// 200 = 0xc8
	vector<std::__1::basic_string<char>, std::__1::allocator<std::__1::basic_string<char> > > m_toUids;	// 212 = 0xd4
	bool m_isHtml;	// 224 = 0xe0
	UIWindow *parentWindow;	// 228 = 0xe4
	UIWindow *oldWindow;	// 232 = 0xe8
	MFMailComposeViewController *mailController;	// 236 = 0xec
}
@property(assign, nonatomic) void *addressbook;	// @synthesize
@property(assign, nonatomic) map<std::__1::basic_string<char>, std::__1::basic_string<char>, std::__1::less<std::__1::basic_string<char> >, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, std::__1::basic_string<char> > > > m_emailToNameMap;	// @synthesize
@property(assign, nonatomic) bool m_isHtml;	// @synthesize
@property(assign, nonatomic) basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > m_message;	// @synthesize
@property(assign, nonatomic) set<std::__1::basic_string<char>, std::__1::less<std::__1::basic_string<char> >, std::__1::allocator<std::__1::basic_string<char> > > m_nameCheckSet;	// @synthesize
@property(assign, nonatomic) basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > m_subject;	// @synthesize
@property(assign, nonatomic) vector<std::__1::basic_string<char>, std::__1::allocator<std::__1::basic_string<char> > > m_toUids;	// @synthesize
@property(retain, nonatomic) MFMailComposeViewController *mailController;	// @synthesize
- (id)init;
- (id).cxx_construct;
- (void).cxx_destruct;
// declared property getter: - (void *)addressbook;
- (void)getFriends;
- (void)getUserData:(id)data;
- (void)getUserNames:(id)names;
- (void)hide;
// declared property getter: - (map<std::__1::basic_string<char>, std::__1::basic_string<char>, std::__1::less<std::__1::basic_string<char> >, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, std::__1::basic_string<char> > > >)m_emailToNameMap;
// declared property getter: - (bool)m_isHtml;
// declared property getter: - (basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >)m_message;
// declared property getter: - (set<std::__1::basic_string<char>, std::__1::less<std::__1::basic_string<char> >, std::__1::allocator<std::__1::basic_string<char> > >)m_nameCheckSet;
// declared property getter: - (basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >)m_subject;
// declared property getter: - (vector<std::__1::basic_string<char>, std::__1::allocator<std::__1::basic_string<char> > >)m_toUids;
- (void)mailComposeController:(id)controller didFinishWithResult:(int)result error:(id)error;
// declared property getter: - (id)mailController;
- (void)queryPhonebook;
- (void)sendMessageTo;
// declared property setter: - (void)setAddressbook:(void *)addressbook;
// declared property setter: - (void)setM_emailToNameMap:(map<std::__1::basic_string<char>, std::__1::basic_string<char>, std::__1::less<std::__1::basic_string<char> >, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, std::__1::basic_string<char> > > >)nameMap;
// declared property setter: - (void)setM_isHtml:(bool)html;
// declared property setter: - (void)setM_message:(basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >)message;
// declared property setter: - (void)setM_nameCheckSet:(set<std::__1::basic_string<char>, std::__1::less<std::__1::basic_string<char> >, std::__1::allocator<std::__1::basic_string<char> > >)set;
// declared property setter: - (void)setM_subject:(basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >)subject;
// declared property setter: - (void)setM_toUids:(vector<std::__1::basic_string<char>, std::__1::allocator<std::__1::basic_string<char> > >)uids;
// declared property setter: - (void)setMailController:(id)controller;
- (BOOL)shouldAutorotateToInterfaceOrientation:(int)interfaceOrientation;
- (void)show;
@end

